################ ZONT #################
climate_heating:
  rest:
    - resource: https://zont-online.ru/api/devices
      method: POST
      scan_interval: 60
      timeout: 20
      headers:
        X-ZONT-Client: !secret zont_client
        X-ZONT-Token: !secret zont_token
        Content-Type: application/json
      payload: '{"load_io": true}'
      sensor:
        - name: "zont_rest_first_floor_temperature"
          json_attributes_path: "$.devices[0].io.z3k-state.4099"
          value_template: "OK"
          json_attributes:
            - "temperature"
        - name: "zont_rest_moduletion"
          json_attributes_path: "$.devices[0].io.z3k-state.20600.ot"
          value_template: "OK"
          json_attributes:
            - "rml"
        - name: "zont_rest_status_heating"
          json_attributes_path: "$.devices[0].io.z3k-state.20496"
          value_template: "OK"
          json_attributes:
            - "target_temp"
            - "setpoint_temp"
            - "status"
        - name: "zont_rest_burner_gvs"
          json_attributes_path: "$.devices[0].io.z3k-state.20603"
          value_template: "OK"
          json_attributes:
            - "status"
        - name: "zont_rest_temp_coolant"
          json_attributes_path: "$.devices[0].io.z3k-state.20600.ot"
          value_template: "OK"
          json_attributes:
            - "bt"
#
  template:
    sensor:
      - name: 'temperature_1st_floor'
        state: "{% if (state_attr('sensor.zont_rest_first_floor_temperature', 'temperature')|float(0) >= 10 and state_attr('sensor.zont_rest_first_floor_temperature', 'temperature')|float(0) <= 30 and is_state('sensor.zont_rest_first_floor_temperature', 'OK')) %}{{ state_attr('sensor.zont_rest_first_floor_temperature', 'temperature')|float(0) }}{% else %}{{ state_attr('air_quality.detektor_kachestva_vozdukha', 'temperature') }}{% endif %}"
        unit_of_measurement: '°C'
        icon: mdi:home-thermometer
#
      - name: 'target_temperature_heating'
        state: "{{ state_attr('sensor.zont_rest_status_heating', 'target_temp')|float(0) }}"
        availability: "{{is_state('sensor.zont_rest_status_heating', 'OK') }}"
        unit_of_measurement: '°C'
        icon: mdi:temperature-celsius
#
      - name: 'moduletion_burner'
        state: "{{ state_attr('sensor.zont_rest_moduletion', 'rml')|round(0) }}"
        availability: "{{is_state('sensor.zont_rest_moduletion', 'OK') }}"
        unit_of_measurement: '%'
        icon: mdi:gas-burner
#
      - name: 'temperature_coolant'
        state: "{{ state_attr('sensor.zont_rest_temp_coolant', 'bt')|round(0) }}"
        availability: "{{is_state('sensor.zont_rest_temp_coolant', 'OK') }}"
        unit_of_measurement: '°C'
        icon: mdi:coolant-temperature
#
      - name: 'calculation_temperature_coolant'
        state: "{{ state_attr('sensor.zont_rest_status_heating', 'setpoint_temp')|round(0) }}"
        availability: "{{is_state('sensor.zont_rest_status_heating', 'OK') }}"
        unit_of_measurement: '°C'
        icon: mdi:thermometer
#
      - name: 'burner_heating'
        state: "{{ state_attr('sensor.zont_rest_status_heating', 'status') }}"
        availability: "{{is_state('sensor.zont_rest_status_heating', 'OK') }}"
        icon: mdi:fire
#
      - name: 'burner_gvs'
        state: "{{ state_attr('sensor.zont_rest_burner_gvs', 'status') }}"
        availability: "{{is_state('sensor.zont_rest_burner_gvs', 'OK') }}"
        icon: mdi:fire
#
      - name: 'zont_status_heating'
        state: >
            {% if (state_attr('sensor.zont_rest_burner_gvs', 'status') == 1 ) and (state_attr('sensor.zont_rest_status_heating', 'status') == 0 ) %}
                ГВС 
            {% elif (state_attr('sensor.zont_rest_burner_gvs', 'status') == 0 ) and (state_attr('sensor.zont_rest_status_heating', 'status') == 1 ) %} 
                Отопление 
            {% elif (state_attr('sensor.zont_rest_burner_gvs', 'status') == 1 ) and (state_attr('sensor.zont_rest_status_heating', 'status') == 1 ) %} 
                Отопление | ГВС
            {% else %} Не активно {% endif %}
        icon: mdi:radiator
#
#
# Установка режима "Комфорт"
  rest_command:
    zont_set_comfort:
      url: https://zont-online.ru/api/send_z3k_command
      method: POST
      headers:
        X-ZONT-Client: !secret zont_client
        X-ZONT-Token: !secret zont_token
        Content-Type: application/json
      payload: '{"device_id": 224117, "object_id": 20501, "command_name": "SelectHeatingMode", "command_args": null, "is_guaranteed": true}'
# Установка режима "Расписание"
    zont_set_scheduled:
      url: https://zont-online.ru/api/send_z3k_command
      method: POST
      headers:
        X-ZONT-Client: !secret zont_client
        X-ZONT-Token: !secret zont_token
        Content-Type: application/json
      payload: '{"device_id": 224117, "object_id": 20503, "command_name": "SelectHeatingMode", "command_args": null, "is_guaranteed": true}'
# Установка режима "Выключен"
    zont_set_off:
      url: https://zont-online.ru/api/send_z3k_command
      method: POST
      headers:
        X-ZONT-Client: !secret zont_client
        X-ZONT-Token: !secret zont_token
        Content-Type: application/json
      payload: '{"device_id": 224117, "object_id": 20504, "command_name": "SelectHeatingMode", "command_args": null, "is_guaranteed": true}'
# Установить +1 к текущей целевой температуре
    zont_up_target_temp:
      url: https://zont-online.ru/api/send_z3k_command
      method: POST
      headers:
        X-ZONT-Client: !secret zont_client
        X-ZONT-Token: !secret zont_token
        Content-Type: application/json
      payload: '{"device_id": 224117, "object_id": 20496, "command_name": "TargetTemperature", "command_args": {"value": {{ (states.sensor.zont_target_temperature.state) | round(0) +1 }}}, "is_guaranteed": true}'
# Установить -1 к текущей целевой температуре
    zont_down_target_temp:
      url: https://zont-online.ru/api/send_z3k_command
      method: POST
      headers:
        X-ZONT-Client: !secret zont_client
        X-ZONT-Token: !secret zont_token
        Content-Type: application/json
      payload: '{"device_id": 224117, "object_id": 20496, "command_name": "TargetTemperature", "command_args": {"value": {{ (states.sensor.zont_target_temperature.state) | round(0) -1 }}}, "is_guaranteed": true}'
# Установить целевую температуру из input_number
    zont_set_target_temp:
      url: https://zont-online.ru/api/send_z3k_command
      method: POST
      headers:
        X-ZONT-Client: !secret zont_client
        X-ZONT-Token: !secret zont_token
        Content-Type: application/json
      payload: '{"device_id": 224117, "object_id": 20496, "command_name": "TargetTemperature", "command_args": {"value": {{ (states.input_number.target_heating_temperature.state) | round(1) }}}, "is_guaranteed": true}'
#
